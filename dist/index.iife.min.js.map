{"version":3,"file":"index.iife.min.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/@solana/web3.js/node_modules/superstruct/lib/index.es.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/utils.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/@solana/spl-token/lib/esm/instructions/types.js","../node_modules/@solana/spl-token/lib/esm/instructions/internal.js","../node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../src/utils/math.ts","../src/constants.ts","../src/utils/program-address.ts","../node_modules/buffer-layout/lib/Layout.js","../node_modules/@coral-xyz/borsh/dist/index.js","../node_modules/superstruct/dist/index.mjs","../src/layouts.ts","../src/utils/stake.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDataPack = void 0;\nexports.createError = createError;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar errors = new Map([[-32000, \"Event not provided\"], [-32600, \"Invalid Request\"], [-32601, \"Method not found\"], [-32602, \"Invalid params\"], [-32603, \"Internal error\"], [-32604, \"Params not found\"], [-32605, \"Method forbidden\"], [-32606, \"Event forbidden\"], [-32700, \"Parse error\"]]);\nvar DefaultDataPack = exports.DefaultDataPack = /*#__PURE__*/function () {\n  function DefaultDataPack() {\n    (0, _classCallCheck2[\"default\"])(this, DefaultDataPack);\n  }\n  return (0, _createClass2[\"default\"])(DefaultDataPack, [{\n    key: \"encode\",\n    value: function encode(value) {\n      return JSON.stringify(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(value) {\n      return JSON.parse(value);\n    }\n  }]);\n}();\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nfunction createError(code, details) {\n  var error = {\n    code: code,\n    message: errors.get(code) || \"Internal Server Error\"\n  };\n  if (details) error[\"data\"] = details;\n  return error;\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _eventemitter = require(\"eventemitter3\");\nvar _utils = require(\"./utils\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = exports[\"default\"] = /*#__PURE__*/function (_EventEmitter) {\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    var dataPack = arguments.length > 4 ? arguments[4] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _callSuper(this, CommonClient);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (!dataPack) _this.dataPack = new _utils.DefaultDataPack();else _this.dataPack = dataPack;\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  return (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || undefined,\n          id: rpc_id\n        };\n        _this2.socket.send(_this2.dataPack.encode(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: (function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.call(\"rpc.login\", params);\n            case 2:\n              resp = _context.sent;\n              if (resp) {\n                _context.next = 5;\n                break;\n              }\n              throw new Error(\"authentication failed\");\n            case 5:\n              return _context.abrupt(\"return\", resp);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n    )\n  }, {\n    key: \"listMethods\",\n    value: (function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.call(\"__listMethods\");\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n    )\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params\n        };\n        _this3.socket.send(_this3.dataPack.encode(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: (function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (typeof event === \"string\") event = [event];\n              _context3.next = 3;\n              return this.call(\"rpc.on\", event);\n            case 3:\n              result = _context3.sent;\n              if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                _context3.next = 6;\n                break;\n              }\n              throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n            case 6:\n              return _context3.abrupt(\"return\", result);\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    )\n  }, {\n    key: \"unsubscribe\",\n    value: (function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (typeof event === \"string\") event = [event];\n              _context4.next = 3;\n              return this.call(\"rpc.off\", event);\n            case 3:\n              result = _context4.sent;\n              if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                _context4.next = 6;\n                break;\n              }\n              throw new Error(\"Failed unsubscribing from an event with: \" + result);\n            case 6:\n              return _context4.abrupt(\"return\", result);\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n    )\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Enable / disable automatic reconnection.\n     * @method\n     * @param {Boolean} reconnect - enable / disable reconnection\n     * @return {Undefined}\n     */\n  }, {\n    key: \"setAutoReconnect\",\n    value: function setAutoReconnect(reconnect) {\n      this.reconnect = reconnect;\n    }\n    /**\n     * Set the interval between reconnection attempts.\n     * @method\n     * @param {Number} interval - reconnection interval in milliseconds\n     * @return {Undefined}\n     */\n  }, {\n    key: \"setReconnectInterval\",\n    value: function setReconnectInterval(interval) {\n      this.reconnect_interval = interval;\n    }\n    /**\n     * Set the maximum number of reconnection attempts.\n     * @method\n     * @param {Number} max_reconnects - maximum reconnection attempts\n     * @return {Undefined}\n     */\n  }, {\n    key: \"setMaxReconnects\",\n    value: function setMaxReconnects(max_reconnects) {\n      this.max_reconnects = max_reconnects;\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = _this4.dataPack.decode(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) args.push(message.params[i]);\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message === null || message === void 0 ? void 0 : message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n}(_eventemitter.EventEmitter);","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _callSuper(this, WebSocketBrowserImpl);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  return (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _class;\nlet _Symbol$toStringTag;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\n_Symbol$toStringTag = Symbol.toStringTag;\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [_Symbol$toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_class = PublicKey;\nPublicKey.default = new _class('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _class2;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_class2 = Lockup;\nLockup.default = new _class2(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId.equals(TOKEN_PROGRAM_ID)) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n    TokenInstruction[TokenInstruction[\"TransferHookExtension\"] = 36] = \"TransferHookExtension\";\n    // ConfidentialTransferFeeExtension = 37,\n    // WithdrawalExcessLamports = 38,\n    TokenInstruction[TokenInstruction[\"MetadataPointerExtension\"] = 39] = \"MetadataPointerExtension\";\n    TokenInstruction[TokenInstruction[\"GroupPointerExtension\"] = 40] = \"GroupPointerExtension\";\n    TokenInstruction[TokenInstruction[\"GroupMemberPointerExtension\"] = 41] = \"GroupMemberPointerExtension\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { PublicKey } from '@solana/web3.js';\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n/**\n * Construct a RecoverNested instruction\n *\n * @param nestedAssociatedToken             Nested associated token account (must be owned by `ownerAssociatedToken`)\n * @param nestedMint                        Token mint for the nested associated token account\n * @param destinationAssociatedToken        Wallet's associated token account\n * @param ownerAssociatedToken              Owner associated token account address (must be owned by `owner`)\n * @param ownerMint                         Token mint for the owner associated token account\n * @param owner                             Wallet address for the owner associated token account\n * @param programId                         SPL Token program account\n * @param associatedTokenProgramId          SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRecoverNestedInstruction(nestedAssociatedToken, nestedMint, destinationAssociatedToken, ownerAssociatedToken, ownerMint, owner, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: nestedAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: nestedMint, isSigner: false, isWritable: false },\n        { pubkey: destinationAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerMint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: true },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.from([2]),\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nexport function solToLamports(amount: number): number {\n  if (isNaN(amount)) return Number(0);\n  return Number(amount * LAMPORTS_PER_SOL);\n}\n\nexport function lamportsToSol(lamports: number | BN | bigint): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n  if (typeof lamports === 'bigint') {\n    return Math.abs(Number(lamports)) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n","import { Buffer } from 'buffer';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('SPoo1Ku8WFXoNDMHPsrGSTSG1Y47rzgn41SLUNakuHy');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = LAMPORTS_PER_SOL;\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport {\n  METADATA_PROGRAM_ID,\n  EPHEMERAL_STAKE_SEED_PREFIX,\n  TRANSIENT_STAKE_SEED_PREFIX,\n} from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport async function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed?: number,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed ? new BN(seed).toArrayLike(Buffer, 'le', 4) : Buffer.alloc(0),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toArrayLike(Buffer, 'le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool redelegation\n */\nexport async function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toArrayLike(Buffer, 'le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the metadata program address for the stake pool\n */\nexport function findMetadataAddress(stakePoolMintAddress: PublicKey) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), stakePoolMintAddress.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","import { publicKey, struct, u32, u64, u8, option, vec } from '@coral-xyz/borsh';\nimport { Lockup, PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  Infer,\n  number,\n  nullable,\n  enums,\n  type,\n  coerce,\n  instance,\n  string,\n  optional,\n} from 'superstruct';\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\nconst feeFields = [u64('denominator'), u64('numerator')];\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === 'string') return new BN(value, 10);\n  throw new Error('invalid big num');\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: Lockup;\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  struct([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], 'lockup'),\n  struct(feeFields, 'epochFee'),\n  option(struct(feeFields), 'nextEpochFee'),\n  option(publicKey(), 'preferredDepositValidatorVoteAddress'),\n  option(publicKey(), 'preferredWithdrawValidatorVoteAddress'),\n  struct(feeFields, 'stakeDepositFee'),\n  struct(feeFields, 'stakeWithdrawalFee'),\n  option(struct(feeFields), 'nextStakeWithdrawalFee'),\n  u8('stakeReferralFee'),\n  option(publicKey(), 'solDepositAuthority'),\n  struct(feeFields, 'solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey(), 'solWithdrawAuthority'),\n  struct(feeFields, 'solWithdrawalFee'),\n  option(struct(feeFields), 'nextSolWithdrawalFee'),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n","import {\n  Connection,\n  Keypair,\n  PublicKey,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\nimport BN from 'bn.js';\n\nimport { lamportsToSol } from './math';\nimport { WithdrawAccount } from '../index';\nimport {\n  Fee,\n  StakePool,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfoStatus,\n} from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: number;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: number,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(validatorListAcc?.data) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE;\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: number;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports.toNumber(),\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.toNumber() - minBalance;\n    if (transientStakeLamports > 0) {\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports - a.lamports);\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = (reserveStake?.lamports ?? 0) - minBalanceForRentExemption;\n  if (reserveStakeBalance > 0) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = amount;\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports <= minBalance && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = divideBnToNumber(\n          new BN(availableForWithdrawal).mul(inverseFee.denominator),\n          inverseFee.numerator,\n        );\n      }\n\n      const poolAmount = Math.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount <= 0) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount -= poolAmount;\n\n      if (remainingAmount == 0) {\n        break;\n      }\n    }\n\n    if (remainingAmount == 0) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount > 0) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: number): number {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  return Math.floor(\n    divideBnToNumber(new BN(stakeLamports).mul(stakePool.poolTokenSupply), stakePool.totalLamports),\n  );\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: number): number {\n  const numerator = new BN(poolTokens).mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return 0;\n  }\n  return divideBnToNumber(numerator, denominator);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport { Buffer } from 'buffer';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<any>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  type.layout.encode(layoutFields, data);\n\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import {\n  PublicKey,\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { InstructionType, encodeData, decodeData } from './utils';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'IncreaseValidatorStake'\n  | 'DecreaseValidatorStake'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'DepositSol'\n  | 'WithdrawStake'\n  | 'WithdrawSol'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'DecreaseValidatorStakeWithReserve'\n  | 'Redelegate'\n  | 'AddValidatorToPool'\n  | 'RemoveValidatorFromPool';\n\n// 'UpdateTokenMetadata' and 'CreateTokenMetadata' have dynamic layouts\n\nconst MOVE_STAKE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.ns64('lamports'),\n  BufferLayout.ns64('transientStakeSeed'),\n]);\n\nconst UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.u32('startIndex'),\n  BufferLayout.u8('noMerge'),\n]);\n\nexport function tokenMetadataLayout(\n  instruction: number,\n  nameLength: number,\n  symbolLength: number,\n  uriLength: number,\n) {\n  if (nameLength > METADATA_MAX_NAME_LENGTH) {\n    throw 'maximum token name length is 32 characters';\n  }\n\n  if (symbolLength > METADATA_MAX_SYMBOL_LENGTH) {\n    throw 'maximum token symbol length is 10 characters';\n  }\n\n  if (uriLength > METADATA_MAX_URI_LENGTH) {\n    throw 'maximum token uri length is 200 characters';\n  }\n\n  return {\n    index: instruction,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('nameLen'),\n      BufferLayout.blob(nameLength, 'name'),\n      BufferLayout.u32('symbolLen'),\n      BufferLayout.blob(symbolLength, 'symbol'),\n      BufferLayout.u32('uriLen'),\n      BufferLayout.blob(uriLength, 'uri'),\n    ]),\n  };\n}\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  AddValidatorToPool: {\n    index: 1,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction'), BufferLayout.u32('seed')]),\n  },\n  RemoveValidatorFromPool: {\n    index: 2,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT,\n  },\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DepositStake: {\n    index: 9,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseValidatorStakeWithReserve: {\n    index: 21,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  Redelegate: {\n    index: 22,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Amount of lamports to redelegate\n      BufferLayout.ns64('lamports'),\n      /// Seed used to create source transient stake account\n      BufferLayout.ns64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      BufferLayout.ns64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      BufferLayout.ns64('destinationTransientStakeSeed'),\n    ]),\n  },\n});\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport type CleanupRemovedValidatorEntriesParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n};\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport type UpdateValidatorListBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n};\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport type UpdateStakePoolBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport type DecreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface DecreaseValidatorStakeWithReserveParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n}\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport type IncreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport type DepositStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport type WithdrawStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Withdraw sol instruction params\n */\nexport type WithdrawSolParams = {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport type DepositSolParams = {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number;\n};\n\nexport type RedelegateParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n};\n\nexport type CreateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  poolMint: PublicKey;\n  payer: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type UpdateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type AddValidatorToPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  reserveStake: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  seed?: number;\n};\n\nexport type RemoveValidatorFromPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n};\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates instruction to add a validator into the stake pool.\n   */\n  static addValidatorToPool(params: AddValidatorToPoolParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      reserveStake,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      validatorVote,\n      seed,\n    } = params;\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.AddValidatorToPool;\n    const data = encodeData(type, { seed: seed == undefined ? 0 : seed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to remove a validator from the stake pool.\n   */\n  static removeValidatorFromPool(params: RemoveValidatorFromPoolParams): TransactionInstruction {\n    const { stakePool, staker, withdrawAuthority, validatorList, validatorStake, transientStake } =\n      params;\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.RemoveValidatorFromPool;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance;\n    const data = encodeData(type, { startIndex, noMerge: noMerge ? 1 : 0 });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        isWritable: true,\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to cleanup removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStakeWithReserve` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseValidatorStakeWithReserve(\n    params: DecreaseValidatorStakeWithReserveParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStakeWithReserve;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol;\n    const data = encodeData(type, { lamports });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      reserveStake,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(17, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(18, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Decode a deposit stake pool instruction and retrieve the instruction params.\n   */\n  static decodeDepositStake(instruction: TransactionInstruction): DepositStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 11);\n\n    decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      validatorList: instruction.keys[1].pubkey,\n      depositAuthority: instruction.keys[2].pubkey,\n      withdrawAuthority: instruction.keys[3].pubkey,\n      depositStake: instruction.keys[4].pubkey,\n      validatorStake: instruction.keys[5].pubkey,\n      reserveStake: instruction.keys[6].pubkey,\n      destinationPoolAccount: instruction.keys[7].pubkey,\n      managerFeeAccount: instruction.keys[8].pubkey,\n      referralPoolAccount: instruction.keys[9].pubkey,\n      poolMint: instruction.keys[10].pubkey,\n    };\n  }\n\n  /**\n   * Decode a deposit sol instruction and retrieve the instruction params.\n   */\n  static decodeDepositSol(instruction: TransactionInstruction): DepositSolParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 9);\n\n    const { amount } = decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      depositAuthority: instruction.keys[1].pubkey,\n      withdrawAuthority: instruction.keys[2].pubkey,\n      reserveStake: instruction.keys[3].pubkey,\n      fundingAccount: instruction.keys[4].pubkey,\n      destinationPoolAccount: instruction.keys[5].pubkey,\n      managerFeeAccount: instruction.keys[6].pubkey,\n      referralPoolAccount: instruction.keys[7].pubkey,\n      poolMint: instruction.keys[8].pubkey,\n      lamports: amount,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  private static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('Invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `Invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n","import {\n  AccountInfo,\n  Connection,\n  Keypair,\n  PublicKey,\n  Signer,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport {\n  createApproveInstruction,\n  createAssociatedTokenAccountIdempotentInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n} from '@solana/spl-token';\nimport {\n  ValidatorAccount,\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findStakeProgramAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getValidatorListAccount,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  lamportsToSol,\n  solToLamports,\n  findEphemeralStakeProgramAddress,\n  findMetadataAddress,\n} from './utils';\nimport { StakePoolInstruction } from './instructions';\nimport {\n  StakeAccount,\n  StakePool,\n  StakePoolLayout,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfo,\n} from './layouts';\nimport { MAX_VALIDATORS_TO_UPDATE, MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from './constants';\nimport { create } from 'superstruct';\nimport BN from 'bn.js';\n\nexport type { StakePool, AccountType, ValidatorList, ValidatorStakeInfo } from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: number;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  sourceTransientStakeSeed: number | BN;\n  destinationTransientStakeSeed: number | BN;\n  ephemeralStakeSeed: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection: An active web3js connection.\n * @param stakePoolAddress: The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  const account = await connection.getAccountInfo(stakePoolAddress);\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection: An active web3js connection.\n * @param stakeAccount: The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program != 'stake') {\n    throw new Error('Not a stake account');\n  }\n  const parsed = create(result.data.parsed, StakeAccount);\n\n  return parsed;\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection: An active web3js connection.\n * @param stakePoolProgramAddress: The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n): Promise<(StakePoolAccount | ValidatorListAccount)[] | undefined> {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.map((a) => {\n    let decodedData;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        decodedData = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n        decodedData = undefined;\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        decodedData = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n        decodedData = undefined;\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n      decodedData = undefined;\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: {\n        data: decodedData,\n        executable: a.account.executable,\n        lamports: a.account.lamports,\n        owner: a.account.owner,\n      },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(poolMint, authorizedPubkey);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        authorizedPubkey,\n        associatedAddress,\n        authorizedPubkey,\n        poolMint,\n      ),\n    );\n    poolTokenReceiverAccount = associatedAddress;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  const userSolTransfer = new Keypair();\n  const signers: Signer[] = [userSolTransfer];\n  const instructions: TransactionInstruction[] = [];\n\n  // Create the ephemeral SOL account\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: userSolTransfer.publicKey,\n      lamports,\n    }),\n  );\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(stakePool.poolMint, from);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        from,\n        associatedAddress,\n        from,\n        stakePool.poolMint,\n      ),\n    );\n    destinationTokenAccount = associatedAddress;\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = getAssociatedTokenAddressSync(stakePool.account.data.poolMint, tokenOwner);\n  }\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount = null;\n  if (stakeReceiver) {\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n  } else if (stakeReceiverAccount && stakeReceiverAccount?.type == 'delegated') {\n    const voteAccount = stakeReceiverAccount.info?.stake?.delegation.voter;\n    if (!voteAccount) throw new Error(`Invalid stake receiver ${stakeReceiver} delegation`);\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n    const validatorList = ValidatorListLayout.decode(validatorListAccount?.data) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(`Preferred withdraw valdator's stake account is invalid`);\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n      );\n\n      if (availableForWithdrawal < poolAmount) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n\n    if (availableForWithdrawal < poolAmount) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = Math.ceil(\n      calcLamportsWithdrawAmount(stakePool.account.data, withdrawAccount.poolAmount),\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  if (stakeReceiver && stakeReceiverAccount && stakeReceiverAccount.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = getAssociatedTokenAddressSync(\n    stakePool.account.data.poolMint,\n    tokenOwner,\n  );\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  const poolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() != expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: userTransferAuthority.publicKey,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\nexport async function addValidatorToPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  seed?: number,\n) {\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n  const { reserveStake, staker, validatorList } = stakePool;\n\n  const validatorListAccount = await getValidatorListAccount(connection, validatorList);\n\n  const validatorInfo = validatorListAccount.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (validatorInfo) {\n    throw new Error('Vote account is already in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n    seed,\n  );\n\n  const instructions: TransactionInstruction[] = [\n    StakePoolInstruction.addValidatorToPool({\n      stakePool: stakePoolAddress,\n      staker: staker,\n      reserveStake: reserveStake,\n      withdrawAuthority: withdrawAuthority,\n      validatorList: validatorList,\n      validatorStake: validatorStake,\n      validatorVote: validatorVote,\n    }),\n  ];\n\n  return {\n    instructions,\n  };\n}\n\nexport async function removeValidatorFromPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  seed?: number,\n) {\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n  const { staker, validatorList } = stakePool;\n\n  const validatorListAccount = await getValidatorListAccount(connection, validatorList);\n\n  const validatorInfo = validatorListAccount.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account is not already in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n    seed,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [\n    StakePoolInstruction.removeValidatorFromPool({\n      stakePool: stakePoolAddress,\n      staker: staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n    }),\n  ];\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the increaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed == undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.increaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the decreaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed == undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStakeWithReserve({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks: Array<ValidatorStakeInfo[]> = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    sourceTransientStakeSeed,\n    destinationVoteAccount,\n    destinationTransientStakeSeed,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const stakePoolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = await findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  payer: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePoolAddress,\n      poolMint: stakePool.account.data.poolMint,\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePoolAddress,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","isBytes","lengths","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","word","shift","byteSwap","byteSwap32","TextEncoder","encode","toBytes","abytes","concatBytes","arrays","sum","pad","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","l","setUint32","Chi","Maj","HashMD","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","item","hexes","_","padStart","bytesToHex","hex","numberToHexUnpadded","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","ai","n1","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","equalBytes","diff","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","mod","result","power","modulo","pow2","invert","u","q","r","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","reduce","FpPow","f","p","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","key","fieldLen","minLen","reduced","wNAF","bits","constTimeNegate","condition","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Fp$1","module","assert","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","SHA256_K","SHA256_IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","forEach","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Layout_1","Layout$3","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","Layout$2","span","property","makeDestinationObject","getSpan","replicate","rv","assign","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator$1","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","BitField$1","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","done","toFailure","branch","refinement","toFailures","run","coerce","coercer","valid","validator","ts","Set","refiner","Struct$2","Struct","props","is","validate","tuples","tuple","define","any","Element","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","version","hashfunc","generateUUID","namespace","err","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","filter","_interopRequireDefault","_typeof","_regeneratorRuntime","asyncIterator","toStringTag","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","__proto__","awrap","async","Promise","stop","rval","handle","complete","finish","catch","_catch","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","reject","_next","_throw","info","_asyncToGenerator","_classCallCheck","Constructor","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","_setPrototypeOf","_inherits","subClass","superClass","has","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","DefaultDataPack","createError","_classCallCheck2","_createClass2","details","_regenerator","_asyncToGenerator2","_typeof2","require$$3","require$$4","require$$5","_possibleConstructorReturn2","require$$6","_getPrototypeOf2","require$$7","_inherits2","require$$8","_eventemitter","require$$9","_utils","require$$10","_callSuper","_isNativeReflectConstruct","construct","__rest","propertyIsEnumerable","_EventEmitter","CommonClient","webSocketFactory","_this","address","generate_request_id","dataPack","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","_this2","send","promise","setTimeout","_login","_callee","resp","_callee$","_context","login","_x","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","close","setAutoReconnect","setReconnectInterval","interval","setMaxReconnects","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","ut.abytes","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.isBytes","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","sqrtError","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","mod.mapHashToField","isProbPub","getSharedSecret","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","signature","sg","_sig","derError","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","c2","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","Struct$1","properties","SOLANA_SCHEMA","decodeUnchecked","Enum","enum","_class","_Symbol$toStringTag","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","unique","toBase58","zeroPad","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","rslShim","chars","authorized","lockup","BufferLayout.ns64","voteInit","BufferLayout.u8","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","guardedSplice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","BufferLayout.seq","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","missing","invalid","config","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","decodeData$1","FeeCalculatorLayout","BufferLayout.nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","getDefaultExportFromCjs","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","fastStableStringify$1","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetchImpl","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","decodeData","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","BufferLayout.u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_class2","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","authorize","authorizeWithSeed","splitInstruction","rentExemptReserve","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","VALIDATOR_INFO_KEY","InfoString","website","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assert$1","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","bool","boolLayout","publicKeyLayout","TokenError","TokenAccountNotFoundError","TokenInvalidAccountError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenOwnerOffCurveError","TokenInstruction","addSigners","ownerOrAuthority","multiSigners","approveInstructionData","createApproveInstruction","Approve","AccountType","ACCOUNT_TYPE_SIZE","MultisigLayout","MULTISIG_SIZE","AccountState","AccountLayout","ACCOUNT_SIZE","getAccount","unpackAccount","rawAccount","tlvData","delegateOption","delegatedAmount","isInitialized","Uninitialized","isFrozen","Frozen","isNative","isNativeOption","closeAuthority","closeAuthorityOption","MintLayout","getAssociatedTokenAddressSync","allowOwnerOffCurve","associatedTokenProgramId","createAssociatedTokenAccountIdempotentInstruction","associatedToken","buildAssociatedTokenAccountInstruction","solToLamports","lamportsToSol","signMultiplier","absLamports","lamportsString","splitIndex","solString","parseFloat","METADATA_PROGRAM_ID","METADATA_MAX_NAME_LENGTH","METADATA_MAX_SYMBOL_LENGTH","METADATA_MAX_URI_LENGTH","STAKE_POOL_PROGRAM_ID","MAX_VALIDATORS_TO_UPDATE","EPHEMERAL_STAKE_SEED_PREFIX","TRANSIENT_STAKE_SEED_PREFIX","MINIMUM_ACTIVE_STAKE","findWithdrawAuthorityProgramAddress","stakePoolAddress","findStakeProgramAddress","voteAccountAddress","findTransientStakeProgramAddress","findEphemeralStakeProgramAddress","findMetadataAddress","stakePoolMintAddress","Layout$1","upv","const","rustEnum","vecU8","tagged","vec","i256","u256","i128","u128","i32","i8","buffer_layout_1","web3_js_1","buffer_layout_2","BNLayout","signed","i64","WrappedLayout","decoder","encoder","OptionLayout","decodeBool","encodeBool","wrappedLayout","decodeTag","receivedTag","variants","discriminant","unionLayout","MapEntryLayout","keyLayout","valueLayout","keyBytes","valueBytes","explanation","cause","enums","feeFields","BigNumFromString","StakeAccountType","StakeMeta","StakeAccountInfo","stake","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","StakePoolLayout","ValidatorStakeInfoStatus","ValidatorStakeInfoLayout","ValidatorListLayout","getValidatorListAccount","prepareWithdrawAccounts","stakePool","compareFn","skipFee","validatorListAcc","validatorList","minBalanceForRentExemption","minBalance","Active","stakeAccountAddress","activeStakeLamports","isPreferred","preferredWithdrawValidatorVoteAddress","voteAddress","stakeAddress","transientStakeLamports","transientStakeAccountAddress","transientSeedSuffixStart","reserveStake","reserveStakeBalance","_b","withdrawFrom","remainingAmount","stakeWithdrawalFee","inverseFee","numerator","denominator","filteredAccounts","availableForWithdrawal","calcPoolTokensForDeposit","divideBnToNumber","poolAmount","stakeLamports","poolTokenSupply","totalLamports","calcLamportsWithdrawAmount","poolTokens","quotient","newStakeAccount","stakeReceiverKeypair","arrayChunk","MOVE_STAKE_LAYOUT","UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT","tokenMetadataLayout","nameLength","symbolLength","uriLength","STAKE_POOL_INSTRUCTION_LAYOUTS","AddValidatorToPool","RemoveValidatorFromPool","DecreaseValidatorStake","IncreaseValidatorStake","UpdateValidatorListBalance","UpdateStakePoolBalance","CleanupRemovedValidatorEntries","DepositStake","WithdrawStake","DepositSol","WithdrawSol","IncreaseAdditionalValidatorStake","DecreaseAdditionalValidatorStake","DecreaseValidatorStakeWithReserve","Redelegate","StakePoolInstruction","addValidatorToPool","withdrawAuthority","validatorStake","validatorVote","removeValidatorFromPool","transientStake","updateValidatorListBalance","startIndex","noMerge","validatorAndTransientStakePairs","updateStakePoolBalance","managerFeeAccount","poolMint","cleanupRemovedValidatorEntries","increaseValidatorStake","transientStakeSeed","increaseAdditionalValidatorStake","ephemeralStake","ephemeralStakeSeed","decreaseValidatorStake","decreaseValidatorStakeWithReserve","decreaseAdditionalValidatorStake","depositStake","depositAuthority","destinationPoolAccount","referralPoolAccount","depositSol","fundingAccount","withdrawStake","destinationStake","destinationStakeAuthority","sourceTransferAuthority","sourcePoolAccount","withdrawSol","destinationSystemAccount","solWithdrawAuthority","redelegate","stakePoolWithdrawAuthority","sourceValidatorStake","sourceTransientStake","destinationTransientStake","destinationValidatorStake","sourceTransientStakeSeed","destinationTransientStakeSeed","createTokenMetadata","tokenMetadata","manager","symbol","uri","nameLen","symbolLen","uriLen","updateTokenMetadata","decodeDepositStake","decodeDepositSol","getStakePoolAccount","getStakeAccount","stakeAccount","getStakePoolAccounts","stakePoolProgramAddress","decodedData","poolTokenReceiverAccount","associatedAddress","stakeDepositAuthority","destinationTokenAccount","referrerTokenAccount","fromBalance","stakePoolAccount","userSolTransfer","tokenOwner","useReserve","stakeReceiver","poolTokenAccount","validatorComparator","tokenAccount","stakeAccountRentExemption","stakeReceiverAccount","withdrawAccounts","voteAccount","_d","validatorListAccount","isValidVoter","userTransferAuthority","totalRentFreeBalances","maxWithdrawAccounts","withdrawAccount","solWithdrawAmount","infoMsg","stakeToReceive","stakeKeypair","newStakeKeypair","solReceiver","poolWithdrawAuthority","expectedSolWithdrawAuthority","withdrawTransaction","validatorInfo","updateStakePool","updateListInstructions","validatorChunks","validatorChunk","finalInstructions","stakePoolInfo","reserveAccountStakeAddress","lastUpdateEpoch","maxNumberOfValidators","maxValidators","currentNumberOfValidators","epochInfo","minimumReserveStakeBalance","stakeAccounts","updateRequired","validatorActiveStakeLamports","validatorLastUpdateEpoch","validatorLamports","validatorTransientStakeAccountAddress","validatorTransientStakeLamports","totalPoolTokens","stakeWithdrawBumpSeed","transientSeedSuffixEnd","validatorListStorageAccount","tokenProgramId","epochFee","nextEpochFee","preferredDepositValidatorVoteAddress","stakeDepositFee","nextStakeWithdrawalFee","stakeReferralFee","solDepositAuthority","solDepositFee","solReferralFee","solWithdrawalFee","nextSolWithdrawalFee","lastEpochPoolTokenSupply","lastEpochTotalLamports","reserveStakeLamports","sourceVoteAccount","destinationVoteAccount","createPoolTokenMetadata","updatePoolTokenMetadata"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,82,83]}